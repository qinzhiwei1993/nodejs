### 老牌数据库都是结构型数据库(MySQL、SQL server、 Oracle)，每一个表都有明确的字段，每一行都有记录。
    都是使用SQL( structure query language )，进行数据的操作。
### 老牌数据库的不足，出了什么问题？
        都是结构型数据库，
        比如，我们现在想往已经有了1000条数据的数据库中增加一个字段。之前已经存在数据，
        实际上不需要增加这个字段，因为这些用户已经填写完表单了，不需要在收集这个字段信息。
        我们的意图就是在今后注册的用户，需要填写该信息。但是，所谓字段是表的一个结构。所有的行
        都必须拥有，不能有的行有，有的行没有这个字段。
        可想而知，大数据时代，数据库中有100万条数据都算少的。我们如果要动字段，时间太长了。
        所以，字段这个东西，太不灵活。

        数据不灵活。一个子弹，需要同样类型的数据。不能一行记录是文本，一行记录是数据。

### 非结构型数据库NoSQL应用而生。
        NoSQL是个怪胎，无法挑战老牌数据库，但是在大数据时代有自己的意义。

### NoSQL(非关系型数据库)
    非结构型数据库。 没有行、列的概念。用JSON来存储数据。
    NoSQL中，最小的数据条目，不是行，是"文档"。
    文档就是键值对的一个结合，实际上表达式和JSON一样。相当于"行"。
    {
        "key": "value",
    }
    集合(collection): 就是一组文档，相当于"表"。集合中可以存储完全不同结构的文档。
    文档就是JSON，上下文语境中，也是JavaScript范畴，所以我们的数据库，也是js范畴的东西。JS全栈。
        因此，我们总结NoSQL数据库在以下的这几种情况下比较适用：1、数据模型比较简单；2、需要灵活性更强的IT系统；3、对数据库性能要求较高；4、不需要高度的数据一致性；5、对于给定key，比较容易映射复杂值的环境。

        有些系统，特别需要筛选，比如，筛选出女生大于20岁的。那么SQL型的数据库，非常擅长。因为他有行和列的概念。
        但是，有些系统，真的不需要进行那么多的筛选，比如站内信，只需要存储就好了。不需要筛选，那么是NoSQL擅长的。

    NoSQL不是银弹，没有资格挑战老牌的数据库。还是特定情况下，是适合的。

### MongoDB 安装

    win7系统需要安装补丁。KB2731284
    配置系统环境变量。便于使用(在系统的任何文件，使用mogodb命令)

    最好不要改变mongodb安装路径。默认安装。
    mongo 负责使用数据库
    mongod 开机  mongod --dbpath database  指向真实存放数据的位置
    mongoimport 导入数据

    --dbpath 就是选择数据库文档所在的文件夹。
    也就是说，mongoDB中，真的有物理文件，对应一个个数据库，U盘可以拷走。
    一定要保持，开机这个CMD不能动，不能关(关机: ctrl + c)。一旦这个cmd有问题了，数据库就自动关闭了。
    所以应该在开另一个cmd

    使用mongo命令连接据库


    show dbs  列出所有数据库
    use  数据库名字  使用数据库、新建数据库。如果真的想把数据库创建成功，必须插入一条数据。
    use student  进入student集合，如果没有自动创建。
    db.student.insert({"name":"xiaoming","age":12,"sex":"nan"})  向集合中插入数据
    show collections  看数据库中的所有集合
    db.student.find() 看集合中的数据
    db.student.find({"name":"xiaoming"}) 查找某一项
    db.dropDatabase()  删除数据库

###数据库使用
    要管理数据库，必须先开机，开机使用 mongod --dbpath database
    管理数据库： mongo(一定要在新的cmd中输入)

    导入外部数据: 我们不可能一条一条的insert。所以，我们希望用sublime在外部写好数据的形式，然后导入数据
    mongoimport --db test --collection restaurants --drop --file ~/downloads/primer-dataset.json
        --db test  往哪个数据库里面导入
        --collection  restaurants 往哪个集合中导入
        --drop 把集合清空
        --file ~/downloads/primer-dataset.json  导入的文件

    ###查找数据 用find。如果find中没有参数，那么会列数这个结合的所有文档：
        db.student.find(); 查找所有文档
        db.student.find({"score.shuxue": 10}) 精确匹配
        多条件查询（并）: 用逗号分割开
            db.student.find({"score.shuxu":10,"age":12});
        大于： 查找数学成绩大于70的 ，小于是 $lt
            db.student.find({"score.shuxue": {$gt:70}});
        并且： 是用,逗号链接调条件
        或： 数学成绩为70或者90的人
            db.student.find(
                {$or:[{"socre.shuxue":70},{"socre.shuxue":90}]}
            );

        查询完毕之后，打点调用sort，表示升降排序 1表示升序，-1表示降序
            db.student.find().sort({"socre.shuxue":1,"age":-1});//前面的属性优先，第一个属性相同，比较第二个属性。。


    ###删除数据
        删除集合：
            db.student.drop()
        移除文档
            移除所有数学为70的人
                db.student.remove({"score.shuxue":70});
            移出第一个数学为70的人
                db.student.remove({"score.shuxue":70},{justOne: true});
    ###修改数据
        db.student.update(
           {"name": "小明"},//查找name为小明的项
           {
             $set:{"age": 16},//修改的属性  set关键字必须有，否则将改变整个文档为age:16
             $currentDate: {"lastModified": true}   //最后一次修改时间
           },
           {
              multi: true  //更改多项， 默认情况下，update只能更改一项
           }
        );


        //完整替换。不写$set关键字
