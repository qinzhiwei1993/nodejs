1、nodejs：服务器语言，服务器，js执行环境。
2、nodejs没有根目录，因为nodejs根本没有web容器——
   这正是nodejs的一个优点，适合做顶层路由设计，可以把路由做的特别漂亮
   nodejs的路径和文件没有关系
3、环境变量：就是在系统的任何目录下，都可以执行c:/program/node.exe程序



##http模块##
1.req：
    req.url：用户请求的URL地址。所有的路由设计，都是通过req.url来实现的
             关心的不是拿到URL，而是识别URL。
             url模块和querystring模块都对识别URL有帮助

             1、  查询字符串  aa=bb&aa=bb&aa=bb
             querystring.parse(str, null, null, { decodeURIComponent: gbkDecodeURIComponent })  该方法会把一个 URL 查询字符串 str 解析成一个键值对的集合。

             例子，查询字符串 'foo=bar&abc=xyz&abc=123' 被解析成：

             {
               foo: 'bar',
               abc: ['xyz', '123']
             }

             2、解析url——url模块
                URL.parse() 可以将url分为很多部分   host pathname query port ...
                url.parse(str,true) 的第二个参数是true，就可以将查询参数转换为对象
                Url {
                  protocol: null,
                  slashes: null,
                  auth: null,
                  host: null,
                  port: null,
                  hostname: null,
                  hash: null,
                  search: '?a=b&c=d&e=f',
                  query: { a: 'b', c: 'd', e: 'f' },
                  pathname: '/fang/ajfl/fs',
                  path: '/fang/ajfl/fs?a=b&c=d&e=f',
                  href: '/fang/ajfl/fs?a=b&c=d&e=f' }

##fs模块  文件管理模块##
    1、读取文件内容
        fs.readFile('./test/1.txt',{'charset': 'utf-8'}, function(err, data){
            if(err){
                throw err;//抛出错误
            }
            console.log(1);
            console.log(userid + "文件读取完毕")
            res.end(data);
        })
    2、创建一个空文件
         fs.mkdir('./album/aaa');
    3、移除一个文件
        fs.rmdir('./album/aaa');//删除一个文件夹
    4、往文件里面写东西
        fs.writeFile(file,data,options,callback)
    5、读取一个文件夹下的所有文件
        fs.readdir('./album/aaa', function(err, fils){//读取一个文件夹下的所有文件
                //fils是一个文件名的数组，表示./album下的所有东西，包括文件和文件夹
                //console.log(fils);
            })
    6、判断一个文件时文件夹还是文件等等。。。
         fs.stat('./album/aaa', function(err,data){
                 console.log(data.isDirectory());//检测路径是不是一个文件夹
             })

##静态资源文件管理##

    一个一个的读文件，判断是否文件存在，判断文件的类型，涉及到path模块


##path模块##
    path.extname(1.html);//返回文件的扩展名

##JSON.parse()##
    JSON.parse() 方法用来解析JSON字符串，构造由字符串描述的JavaScript值或对象。提供可选的reviver函数用以在返回之前对所得到的对象执行变换(操作)。
##JSON.stringify()##
    和JSON.parse()正好相反，将javascript的值或者对象转换我json字符串